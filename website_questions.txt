1.  What is the problem you are trying to solve with this application?
	###########
	## ANSWER MOVED TO THE WEBSITE
	###########


2.  Describe your data in detail: where did it come from, how did you acquire
it, what does it mean, etc.
	###########
	## ANSWER MOVED TO THE WEBSITE
	###########	

3.  Describe your program design and why you chose the features you did.

	###########
	## Needed
	###########
    Executive Summary:
    
    0. Preprocessing Data
    1. Re-implementing serial version from C into Python
	a. We wanted to use Python for seamless integration with the tools/ideas learned in the course. 
	b. The important features we chose to implement from the dmimgadapt() algorithm were the following:
		+ For each pixel in an input image, find the smallest box such that the sum of the pixels inside the box is at least some user defined threshold value.  If the size of the box reaches a user defined maximum size, we move on to the next pixel.
		+  Using the box size determined from (a), we create a properly normalized output image where the sum(input pixels) = sum(output pixels)
	c. Upon initially looking over the dmimgadapt() tool, we initially thought the serial algorithm would be implemented using MPI techniques similar to the Wave Equation Problem encountered in our HW3 problem set.  But after further review of the algorithm, we noticed that the pixel values are static and therefore landed itself to GPU implementation.  
        d. We had to have 3 for-loop kernels to match dmimgadapt() source code. The Gaussian weights were relatively easy to implement in python in lines x and y of 'image_adapt_serial_gaussian.py.'
    
    2. Implementing GPU version
        
        a. Implemented 3 kernels, minimized CPU to GPU read/writes but having all
            kernels access the same global memory and calculate using shared memory
        b. Gaussian is very difficult to implement and has been deferred
        c. 


4.  How do you use your application (mouse and keyboard functions, input/output,
etc)?
	Serial Version:
	###########
	## ANSWER MOVED TO THE WEBSITE
	###########

	GPU Version:
	###########
	## Needed
	###########

5.  What is the performance of your code? What speedup and efficiency did you
achieve? What optimizations did you implement to achieve this speedup?
	###########
	## Needed
	###########

6.  What interesting insights did you gain from this project?
	Danny:
	###########
	## ANSWER MOVED TO THE WEBSITE
	###########  

	Chris:
	###########
	## Needed
	###########

7.  What extensions and improvements can you suggest?
	###########
	## ANSWER MOVED TO THE WEBSITE
	###########
	 

8.  What did you most enjoy about working on this project? What was the most
challenging aspect? What was the most frustrating? What would you do differently
next time?
	Danny:
	###########
	## ANSWER MOVED TO THE WEBSITE
	###########  

	Chris:
	###########
	## Needed
	###########
